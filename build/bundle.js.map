{"version":3,"file":"bundle.js","mappings":"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,KAAK,CAACa,GAAG,EAAEZ,KAAI,CAACD,KAAK,CAACY,GAAG,CAAC;QAClDX,KAAI,CAACmE,gBAAgB,CAACnE,KAAI,CAACD,KAAK,CAACc,QAAQ,CAAC,CAAC,EAAEb,KAAI,CAACD,KAAK,CAACgB,QAAQ,CAAC,CAAC,CAAC;QACnEf,KAAI,CAACsC,YAAY,CAACK,WAAW,CAAC3C,KAAI,CAACD,KAAK,CAAC;MAC7C;IACJ;EACJ,CAAC;AACL;AACA,IAAM2E,UAAU,GAAG,IAAIZ,UAAU,CAAC,CAAC;AACnCY,UAAU,CAACJ,SAAS,CAAC,CAAC;AACtBpF,QAAQ,CAACyF,gBAAgB,CAAC,SAAS,EAAE,UAACC,CAAC,EAAK;EACxC,IAAIF,UAAU,CAAClF,IAAI,CAACM,OAAO,EAAE;IACzB4E,UAAU,CAACF,IAAI,CAACI,CAAC,CAACC,IAAI,CAAC;EAC3B;AACJ,CAAC,CAAC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,S","sources":["webpack://snakegame/./compile/application/Model/Domain/Documents.js","webpack://snakegame/./compile/application/Model/Domain/Enums/ClassList.js","webpack://snakegame/./compile/application/Model/Domain/Enums/ConditionValue.js","webpack://snakegame/./compile/application/Model/Domain/Enums/KeyCodeList.js","webpack://snakegame/./compile/application/Model/Domain/Game.js","webpack://snakegame/./compile/application/Model/Domain/Snake.js","webpack://snakegame/./compile/application/Model/Service/BoardService.js","webpack://snakegame/./compile/application/Model/Service/GameService.js","webpack://snakegame/./compile/application/Model/Service/SnakeService.js","webpack://snakegame/webpack/bootstrap","webpack://snakegame/webpack/runtime/define property getters","webpack://snakegame/webpack/runtime/hasOwnProperty shorthand","webpack://snakegame/webpack/runtime/make namespace object","webpack://snakegame/./compile/index.js"],"sourcesContent":["import { ClassList } from \"./Enums/ClassList.js\";\nconst Documents = {\n    table: document.querySelector(ClassList.table),\n    position: document.getElementsByTagName(\"tr\"),\n};\nexport { Documents };\n","var ClassList;\n(function (ClassList) {\n    ClassList[\"table\"] = \"#main__wrapper\";\n    ClassList[\"snake\"] = \"snake\";\n    ClassList[\"point\"] = \"point\";\n    ClassList[\"gameOverModal\"] = \".gameover__modal__wrapper\";\n    ClassList[\"tr\"] = \"tr\";\n})(ClassList || (ClassList = {}));\n;\nexport { ClassList };\n","var ConditionValue;\n(function (ConditionValue) {\n    ConditionValue[ConditionValue[\"row\"] = 36] = \"row\";\n    ConditionValue[ConditionValue[\"col\"] = 30] = \"col\";\n    ConditionValue[ConditionValue[\"normal\"] = 70] = \"normal\";\n    ConditionValue[ConditionValue[\"hard\"] = 40] = \"hard\";\n    ConditionValue[ConditionValue[\"startX\"] = 10] = \"startX\";\n    ConditionValue[ConditionValue[\"startY\"] = 15] = \"startY\";\n})(ConditionValue || (ConditionValue = {}));\nexport { ConditionValue };\n","var KeyCode;\n(function (KeyCode) {\n    KeyCode[\"ArrowRight\"] = \"ArrowRight\";\n    KeyCode[\"ArrowLeft\"] = \"ArrowLeft\";\n    KeyCode[\"ArrowUp\"] = \"ArrowUp\";\n    KeyCode[\"ArrowDown\"] = \"ArrowDown\";\n})(KeyCode || (KeyCode = {}));\nexport { KeyCode };\n","import { ConditionValue } from \"./Enums/ConditionValue\";\nfunction Game() {\n    this.point = 0;\n    this.isModal = false;\n    this.speed = ConditionValue.normal;\n    this.isProceeding = false;\n    this.canPlay = true;\n}\nexport { Game };\n","import { ConditionValue } from \"./Enums/ConditionValue.js\";\nfunction Snake() {\n    this.startX = ConditionValue.startX;\n    this.startY = ConditionValue.startY;\n    this.stateRight = true;\n    this.stateLeft = true;\n    this.stateUp = true;\n    this.stateDown = true;\n    this.bodys = [[ConditionValue.startY, ConditionValue.startX]];\n    this.pointYX = [ConditionValue.startX, ConditionValue.startY];\n    this.nowProgressed = undefined;\n    this.onX = ConditionValue.startX;\n    this.onY = ConditionValue.startY;\n    this.getLastY = () => {\n        return this.bodys[this.bodys.length - 1][0];\n    };\n    this.getLastX = () => {\n        return this.bodys[this.bodys.length - 1][1];\n    };\n}\nexport { Snake };\n","import { ConditionValue } from \"../Domain/Enums/ConditionValue.js\";\nfunction BoardService() {\n    this.initTable = (element) => {\n        for (let i = 0; i < ConditionValue.col; i++) {\n            const tr = document.createElement('tr');\n            element.append(tr);\n            for (let j = 0; j < ConditionValue.row; j++) {\n                const td = document.createElement('td');\n                document.getElementsByTagName('tr')[i].append(td);\n            }\n        }\n    };\n    this.makePoint = (Snake) => {\n        while (true) {\n            const numX = Math.floor(Math.random() * (ConditionValue.row - 1));\n            const numY = Math.floor(Math.random() * (ConditionValue.col - 1));\n            const snakes = Snake.bodys;\n            for (let i in snakes) {\n                if (numY == snakes[i][0] && numX == snakes[i][1]) {\n                    continue;\n                }\n            }\n            return [numY, numX];\n        }\n    };\n}\nexport { BoardService };\n","function GameService() {\n    this.setGameState = (Game, state) => {\n        Game.canPlay = state;\n    };\n    this.setGameProceeding = (Game, state) => {\n        Game.isProceeding = state;\n    };\n}\nexport { GameService };\n","// import { classList } from '../Domain/Enums/ClassList.ts';\nimport { ConditionValue } from '../Domain/Enums/ConditionValue.js';\nimport { KeyCode } from '../Domain/Enums/KeyCodeList.js';\nfunction SnakeService() {\n    this.addSnake = (Snake, y, x) => {\n        Snake.bodys.unshift([y, x]);\n    };\n    this.removeSnake = (Snake) => {\n        Snake.bodys.pop();\n    };\n    this.initSnake = (Snake, BoardService) => {\n        Snake.onX = ConditionValue.startX;\n        Snake.onY = ConditionValue.startY;\n        Snake.bodys = [[ConditionValue.startY, ConditionValue.startX]];\n        Snake.pointYX = BoardService.makePoint(Snake);\n    };\n    this.checkOver = (Snake, element) => {\n        if ((Snake.onX >= ConditionValue.row ||\n            Snake.onY >= ConditionValue.col ||\n            Snake.onX < 0 ||\n            Snake.onY < 0) ||\n            element[Snake.onY].children[Snake.onX].classList.contains('snake')) {\n            return true;\n        }\n    };\n    this.canMove = (inputCode, Snake) => {\n        Snake.nowProgressed && clearInterval(Snake.nowProgressed);\n        if (inputCode == KeyCode.ArrowRight && Snake.stateRight) {\n            Snake.stateRight = false;\n            Snake.stateLeft = false,\n                Snake.stateUp = true;\n            Snake.stateDown = true;\n            Snake.onX += 1;\n            return true;\n        }\n        else if (inputCode == KeyCode.ArrowLeft && Snake.stateLeft) {\n            Snake.stateRight = false;\n            Snake.stateLeft = false,\n                Snake.stateUp = true;\n            Snake.stateDown = true;\n            Snake.onX -= 1;\n            return true;\n        }\n        else if (inputCode == KeyCode.ArrowUp && Snake.stateUp) {\n            Snake.stateRight = true;\n            Snake.stateLeft = true,\n                Snake.stateUp = false;\n            Snake.stateDown = false;\n            Snake.onY -= 1;\n            return true;\n        }\n        else if (inputCode == KeyCode.ArrowDown && Snake.stateDown) {\n            Snake.stateRight = true;\n            Snake.stateLeft = true,\n                Snake.stateUp = false;\n            Snake.stateDown = false;\n            Snake.onY += 1;\n            return true;\n        }\n        return false;\n    };\n    this.onHit = (Snake) => {\n        const [pointY, pointX] = Snake.pointYX;\n        if (Snake.onY === pointY && Snake.onX === pointX) {\n            return true;\n        }\n    };\n}\nexport { SnakeService };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { BoardService } from './application/Model/Service/BoardService.js';\nimport { Documents } from './application/Model/Domain/Documents.js';\nimport { Snake } from './application/Model/Domain/Snake.js';\nimport { SnakeService } from './application/Model/Service/SnakeService.js';\nimport { Game } from './application/Model/Domain/Game.js';\nimport { GameService } from './application/Model/Service/GameService.js';\nimport { KeyCode } from './application/Model/Domain/Enums/KeyCodeList.js';\nimport { ClassList } from './application/Model/Domain/Enums/ClassList.js';\nfunction Controller() {\n    this.Snake = new Snake();\n    this.SnakeService = new SnakeService();\n    this.BoardService = new BoardService();\n    this.Game = new Game();\n    this.GameService = new GameService(),\n        this.addClassSnake = (y, x) => {\n            Documents.position[y].children[x].classList.add(ClassList.snake);\n        };\n    this.addClassPoint = (y, x) => {\n        Documents.position[y].children[x].classList.add(ClassList.point);\n    };\n    this.removeClassSnake = (y, x) => {\n        Documents.position[y].children[x].classList.remove(ClassList.snake);\n    };\n    this.removeClassPoint = (y, x) => {\n        Documents.position[y].children[x].classList.remove(ClassList.point);\n    };\n    this.gameStart = () => {\n        this.BoardService.initTable(Documents.table);\n        this.gameInit();\n    },\n        this.gameInit = () => {\n            // Controller.Snake.onY = ConditionValue.startY;\n            // Controller.Snake.onX = ConditionValue.startX;\n            // Controller.Snake.bodys = [Controller.SnakeService.initBodys()];\n            // Controller.Snake.pointYX = Controller.BoardService.makePoint();\n            this.SnakeService.initSnake(this.Snake, this.BoardService);\n            this.addClassSnake(this.Snake.startY, this.Snake.startX);\n            this.addClassPoint(this.Snake.pointYX[0], this.Snake.pointYX[1]);\n        };\n    this.move = (keyCode) => {\n        if (KeyCode[keyCode]) {\n            if (this.SnakeService.canMove(keyCode, this.Snake)) {\n                if (this.SnakeService.checkOver(this.Snake, Documents.position)) {\n                }\n                this.SnakeService.addSnake(this.Snake, this.Snake.onY, this.Snake.onX);\n                this.addClassSnake(this.Snake.onY, this.Snake.onX);\n                this.removeClassSnake(this.Snake.getLastY(), this.Snake.getLastX());\n                this.SnakeService.removeSnake(this.Snake);\n            }\n        }\n    };\n}\nconst controller = new Controller();\ncontroller.gameStart();\ndocument.addEventListener(\"keydown\", (e) => {\n    if (controller.Game.canPlay) {\n        controller.move(e.code);\n    }\n});\n// const table = document.querySelector('#main__wrapper');\n// for(let i = 0; i < 30; i++){\n//     const tr = document.createElement('tr');\n//     table.append(tr);\n//     for(let j = 0; j < 36; j++){\n//         const td = document.createElement('td');\n//         document.getElementsByTagName('tr')[i].append(td);\n//     }\n// }\n// const cookieArr = document.cookie.split('; ');\n// let CookieMode = undefined;\n// for(let i = 0; i < cookieArr.length; i++) {\n//     if(cookieArr[i].indexOf('mode') !== -1) {\n//         CookieMode = Number(cookieArr[i].slice(5));\n//         break;\n//     }\n// }\n// function over (x,y) {\n//     if((x > 35 || y > 29 || x < 0 || y < 0) || position[y].childNodes[x].classList.contains('snake')) {//벽, 자기자신의 몸통에 충돌시 over함수 작동\n//         isModal = 1 //모달창의 상태변수\n//         clearsetinterval.forEach(intervals => clearInterval(intervals)); //현재 실행중인 모든 setInterval 종료\n//         state.right = 0, state.left = 0, state.up = 0, state.down = 0;   //재시작을 위해 모든 진행방향의 상태 초기화\n//         onX = 10;                                                        //초기좌표X 초기화\n//         onY = 15;                                                        //초기좌표Y\n//         // for(let i = 0; i < snake.length-1; i++){                         //각좌표의 정보를 담은 배열의 맨마지막을 제외한 모든 좌표들 snake클래스 제거\n//         //     position[snake[i][0]].childNodes[snake[i][1]].classList.toggle('snake');\n//         // }\n//         // snake = [[snake[snake.length-1][0], snake[snake.length-1][1]]];  //snake배열에 맨마지막 좌표만을 남기는 걸로 세팅\n//         document.querySelector('.gameover__modal__wrapper').style.display = 'block'; //모달 창 화면에 display:block\n//         sending_point = dp_point                                         //서버로 보내기위한 점수 유지\n//         speed == 40                                                      //설정되어있던 속도에 따라 하드, 노말 모드 표시\n//         ? document.getElementsByClassName('result__point')[0].textContent = `점수 : ${dp_point}점 (하드)`\n//         : document.getElementsByClassName('result__point')[0].textContent = `점수 : ${dp_point}점 (노말)`;\n//         dp_point = 0;\n//         document.getElementsByClassName('dp__point')[0].textContent = `점수 : ${dp_point}점` //점수판과 dp_point를 0으로 동시 초기화\n//         document.body.style.animation = 'shaking 0.2s'                   //화면에 진동효과 css 부여\n//         table.className = ''                                             //점수에 따라 변하는 table의 클래스이름 초기화\n//         return true                                                      //setinterval 동작에서는 필요없지만 동기적으로 작동하는 움직임에서는 over가 작동시 true를 리턴\n//     }\n// }\n// let position = document.getElementsByTagName('tr'); //tr의 dom 추출\n// let onX = 10;                                       //앞으로 이동할때마다 변하게 될 x좌표\n// let onY = 15;                                       //앞으로 이동할때마다 변하게 될 y좌표\n// let state = {right : 0, left : 0, up : 0, down : 0};//오른쪽으로 이동도중에는 위,아래 방향만 가능하도록 현재 진행중인 상태를 표시\n// let snake = [                                        \n//     [onY,onX],\n// ];                                                  //각 snake의 좌표를 저장\n// let nowstarted;                                     //현재 진행중인 setinterval을 저장할 변수\n// let dp_point = 0;                                   //점수변수\n// let isModal = 0;                                    //모달의 활성화 유무\n// let [aY,aX] = make()                                //먹으면 점수가 증가하게 하는 포인트의 랜덤좌표만드는 함수\n// let speed = 70;                       //speed의 변수에 따라 속도의 변화가 있음 기본값 0.07초\n// let user_name = ''                                  //서버에 post할때 사용하게 될 변수\n// let sending_point = 0;                              //서버에 post할때 사용하게 될 변수\n// position[aY].childNodes[aX].classList.toggle('point');//초기 랜덤좌표에 포인트 생성\n// position[onY].childNodes[onX].classList.toggle('snake');//초기좌표에 시작 snake생성\n// let clearsetinterval = [];                          //현재 진행중인 setinterval들이 담길 배열\n// document.addEventListener('DOMContentLoaded', function () {\n//     CookieMode == 70 ? document.querySelector('.now__mode').textContent='노말' : document.querySelector('.now__mode').textContent='하드'\n// })\n// function make () {  //범위 안의 랜덤좌표 생성 이때 snake가 존재하는 tr위에 랜덤좌표가 생성시 다시 랜덤좌표를 뽑음\n//     while(1) {\n//         let numX = Math.floor(Math.random() * (35))\n//         let numY = Math.floor(Math.random() * (29))\n//         let istrue = 0;\n//         for(let i = 0; i < snake.length; i++){\n//             if(numY == snake[i][0] && numX == snake[i][1]) {\n//                 istrue = 1;\n//                 break;\n//             }\n//         }\n//         if(istrue == 0) {\n//             return [numY, numX];\n//         }\n//     }\n//     return [numY, numX]\n// }\n// const async = (dic) => {\n//     let touch = 0;\n//         dic == 'right'\n//           ? onX++\n//           : dic == 'left'\n//           ? onX--\n//           : dic == 'up'\n//           ? onY--\n//           : dic == 'down'\n//           ? onY++\n//           : undefined;\n//         if (aY == onY && aX == onX) {\n//           touch = 1;\n//           position[onY].childNodes[onX].classList.toggle('point');\n//           [aY, aX] = make();\n//           position[aY].childNodes[aX].classList.toggle('point');\n//           document.getElementsByClassName('dp__point')[0].textContent = `점수 : ${++dp_point}`;\n//           let quotient = Math.floor(dp_point/15);\n//           console.log(quotient)\n//           1 <= quotient && quotient < 2 ? table.className = 'optic'\n//           : 2 <= quotient && quotient < 3 ? table.className = 'blue'\n//           : 3 <= quotient && quotient < 4 ? table.className = 'purple'\n//           : 4 <= quotient && quotient < 5 ? table.className = 'yellow'\n//           : 5 <= quotient && quotient < 6 ? table.className = 'red'\n//           : table.className = ''\n//         }\n//         let isOver = over(onX,onY)\n//         snake.unshift([onY, onX]);\n//         position[onY].childNodes[onX].classList.toggle('snake');\n//         if (touch == 0) {\n//           position[snake[snake.length - 1][0]].childNodes[snake[snake.length - 1][1]].classList.toggle('snake');\n//           snake.pop();\n//         }\n//         return isOver == true ? true : false\n// }\n// const forward = (dic) => {\n//     if (started) { // inter 변수가 존재하지 않을 때에만 setInterval 실행\n//         inter = setInterval(() => {\n//         nowstarted = inter;\n//         let touch = 0;\n//         if (aY == onY && aX == onX) {\n//           touch = 1;\n//           position[onY].childNodes[onX].classList.toggle('point');\n//           [aY, aX] = make();\n//           position[aY].childNodes[aX].classList.toggle('point');\n//           document.getElementsByClassName('dp__point')[0].textContent = `점수 : ${++dp_point}`;\n//           let quotient = Math.floor(dp_point/15);\n//           console.log(quotient)\n//           1 <= quotient && quotient < 2 ? table.className = 'optic'\n//           : 2 <= quotient && quotient < 3 ? table.className = 'blue'\n//           : 3 <= quotient && quotient < 4 ? table.className = 'purple'\n//           : 4 <= quotient && quotient < 5 ? table.className = 'yellow'\n//           : 5 <= quotient && quotient < 6 ? table.className = 'red'\n//           : table.className = ''\n//         }\n//         over(onX, onY);\n//         snake.unshift([onY, onX]);\n//         position[onY].childNodes[onX].classList.toggle('snake');\n//         if (touch == 0) {\n//           position[snake[snake.length - 1][0]].childNodes[snake[snake.length - 1][1]].classList.toggle('snake');\n//           snake.pop();\n//         }\n//       }, speed);\n//     }\n// };\n// document.addEventListener('keydown',function(e) {\n//     if(isModal == 0) {\n//             if(e.code == 'ArrowRight') {\n//                 if(state.right != 1 && state.left != 1) {\n//                     state.right = 1, state.left = 1, state.up = 0, state.down = 0;\n//                     clearInterval(nowstarted)\n//                     if(async('right')) return\n//                     nowstarted = right = setInterval(() => {\n//                     clearsetinterval.push(right);\n//                     let touch = 0;\n//                     onX++\n//                     if (aY == onY && aX == onX) {\n//                     touch = 1;\n//                     position[onY].childNodes[onX].classList.toggle('point');\n//                     [aY, aX] = make();\n//                     position[aY].childNodes[aX].classList.toggle('point');\n//                     document.getElementsByClassName('dp__point')[0].textContent = `점수 : ${++dp_point}`;\n//                     let quotient = Math.floor(dp_point/15);\n//                     console.log(quotient)\n//                     1 <= quotient && quotient < 2 ? table.className = 'optic'\n//                     : 2 <= quotient && quotient < 3 ? table.className = 'blue'\n//                     : 3 <= quotient && quotient < 4 ? table.className = 'purple'\n//                     : 4 <= quotient && quotient < 5 ? table.className = 'yellow'\n//                     : 5 <= quotient && quotient < 6 ? table.className = 'red'\n//                     : table.className = ''\n//                     }    \n//                     over(onX, onY);\n//                     snake.unshift([onY, onX]);\n//                     position[onY].childNodes[onX].classList.toggle('snake');\n//                     if (touch == 0) {\n//                         position[snake[snake.length - 1][0]].childNodes[snake[snake.length - 1][1]].classList.toggle('snake');\n//                         snake.pop();\n//                     }    \n//                     }, speed);\n//                 }\n//             } else if (e.code == 'ArrowLeft') {\n//                 if(state.left != 1 && state.right != 1) {\n//                 state.right = 1, state.left = 1, state.up = 0, state.down = 0;\n//                 clearInterval(nowstarted)\n//                     if(async('left')) return\n//                         nowstarted = left = setInterval(() => {\n//                         clearsetinterval.push(left);\n//                         let touch = 0;\n//                         onX--\n//                         if (aY == onY && aX == onX) {\n//                         touch = 1;\n//                         position[onY].childNodes[onX].classList.toggle('point');\n//                         [aY, aX] = make();\n//                         position[aY].childNodes[aX].classList.toggle('point');\n//                         document.getElementsByClassName('dp__point')[0].textContent = `점수 : ${++dp_point}`;\n//                         let quotient = Math.floor(dp_point/15);\n//                         console.log(quotient)\n//                         1 <= quotient && quotient < 2 ? table.className = 'optic'\n//                         : 2 <= quotient && quotient < 3 ? table.className = 'blue'\n//                         : 3 <= quotient && quotient < 4 ? table.className = 'purple'\n//                         : 4 <= quotient && quotient < 5 ? table.className = 'yellow'\n//                         : 5 <= quotient && quotient < 6 ? table.className = 'red'\n//                         : table.className = ''\n//                         }   \n//                         over(onX, onY);\n//                         snake.unshift([onY, onX]);\n//                         position[onY].childNodes[onX].classList.toggle('snake');\n//                         if (touch == 0) {\n//                             position[snake[snake.length - 1][0]].childNodes[snake[snake.length - 1][1]].classList.toggle('snake');\n//                             snake.pop();\n//                         }\n//                     }, speed);\n//                 }\n//             } else if (e.code == 'ArrowUp') {\n//                 if(state.up != 1 && state.down != 1) {\n//                         state.right = 0, state.left = 0, state.up = 1, state.down = 1;\n//                         clearInterval(nowstarted)\n//                         if(async('up')) return\n//                         nowstarted = up = setInterval(() => {\n//                         clearsetinterval.push(up);\n//                         let touch = 0;\n//                         onY--\n//                         if (aY == onY && aX == onX) {\n//                           touch = 1;\n//                           position[onY].childNodes[onX].classList.toggle('point');\n//                           [aY, aX] = make();\n//                           position[aY].childNodes[aX].classList.toggle('point');\n//                           document.getElementsByClassName('dp__point')[0].textContent = `점수 : ${++dp_point}`;\n//                           let quotient = Math.floor(dp_point/15);\n//                           console.log(quotient)\n//                           1 <= quotient && quotient < 2 ? table.className = 'optic'\n//                           : 2 <= quotient && quotient < 3 ? table.className = 'blue'\n//                           : 3 <= quotient && quotient < 4 ? table.className = 'purple'\n//                           : 4 <= quotient && quotient < 5 ? table.className = 'yellow'\n//                           : 5 <= quotient && quotient < 6 ? table.className = 'red'\n//                           : table.className = ''\n//                         }\n//                         over(onX, onY);\n//                         snake.unshift([onY, onX]);\n//                         position[onY].childNodes[onX].classList.toggle('snake');\n//                         if (touch == 0) {\n//                           position[snake[snake.length - 1][0]].childNodes[snake[snake.length - 1][1]].classList.toggle('snake');\n//                           snake.pop();\n//                         }\n//                       }, speed);\n//                     }\n//             } else if (e.code == 'ArrowDown'){\n//                 if(state.up != 1 && state.down != 1) {\n//                     state.right = 0, state.left = 0, state.up = 1, state.down = 1;\n//                     clearInterval(nowstarted)\n//                         if(async('down')) return\n//                         nowstarted = down = setInterval(() => {\n//                         clearsetinterval.push(down);\n//                         let touch = 0;\n//                         onY++\n//                         if (aY == onY && aX == onX) {\n//                           touch = 1;\n//                           position[onY].childNodes[onX].classList.toggle('point');\n//                           [aY, aX] = make();\n//                           position[aY].childNodes[aX].classList.toggle('point');\n//                           document.getElementsByClassName('dp__point')[0].textContent = `점수 : ${++dp_point}`;\n//                           let quotient = Math.floor(dp_point/15);\n//                           console.log(quotient)\n//                           1 <= quotient && quotient < 2 ? table.className = 'optic'\n//                           : 2 <= quotient && quotient < 3 ? table.className = 'blue'\n//                           : 3 <= quotient && quotient < 4 ? table.className = 'purple'\n//                           : 4 <= quotient && quotient < 5 ? table.className = 'yellow'\n//                           : 5 <= quotient && quotient < 6 ? table.className = 'red'\n//                           : table.className = ''\n//                         }\n//                         over(onX, onY);\n//                         snake.unshift([onY, onX]);\n//                         position[onY].childNodes[onX].classList.toggle('snake');\n//                         if (touch == 0) {\n//                           position[snake[snake.length - 1][0]].childNodes[snake[snake.length - 1][1]].classList.toggle('snake');\n//                           snake.pop();\n//                         }\n//                       }, speed);\n//                     }\n//             }\n//         }\n//     })\n// document.querySelector('.nomal').addEventListener('click',function (){\n//     if(isModal == 0) {\n//         speed = 70;\n//         document.querySelector('.now__mode').textContent='노말'\n//     }\n// })\n// document.querySelector('.hard').addEventListener('click',function (){\n//     if(isModal == 0) {\n//         speed = 40;\n//         document.querySelector('.now__mode').textContent='하드'\n//     }\n// })\n// document.getElementsByClassName('cancle')[0].addEventListener('click',function () {\n//     state.right = 0, state.left = 0, state.up = 0, state.down = 0;\n//     document.querySelector('.gameover__modal__wrapper').style.display = 'none';\n//     isModal = 0;\n//     document.body.style.animation = '';\n//     document.querySelector('.NOMAL').innerHTML='';\n//     document.querySelector('.HARD').innerHTML='';\n//     axios.get('http://211.202.195.102:4000/ranking')\n//     .then(res => {\n//         const {data} = res;\n//         console.log(data);\n//         let n_num = 1;\n//         let h_num = 1;\n//         if(data.length != 0){\n//             for(let i = 0; i < data.length; i++){\n//                 const li = document.createElement('li');\n//                 if(data[i].mode == 40) {\n//                     li.textContent = `${h_num}등 ${data[i].name} ${data[i].point}점`\n//                     document.querySelector('.HARD').appendChild(li);\n//                     h_num++;\n//                 } else {\n//                     li.textContent = `${n_num}등 ${data[i].name} ${data[i].point}점`\n//                     document.querySelector('.NOMAL').appendChild(li);\n//                     n_num++;\n//                 }\n//             }\n//         }\n//     })\n// })\n// document.querySelector('.user__name').addEventListener('change',function(e){\n//     user_name = e.target.value;\n// })\n// document.getElementsByClassName('save')[0].addEventListener('click',function () {\n//     state.right = 0, state.left = 0, state.up = 0, state.down = 0;\n//     document.querySelector('.gameover__modal__wrapper').style.display = 'none';\n//     isModal = 0;\n//     document.body.style.animation = ''\n//     document.querySelector('.NOMAL').innerHTML='';\n//     document.querySelector('.HARD').innerHTML='';\n//     document.querySelector('.user__name').value='';\n//     console.log(speed);\n//     axios.post('http://211.202.195.102:4000',{name : user_name, point : sending_point, mode : speed})\n//     .then(res => {\n//         const {data} = res;\n//         console.log(data);\n//         let n_num = 1;\n//         let h_num = 1;\n//         if(data.length != 0){\n//             for(let i = 0; i < data.length; i++){\n//                 const li = document.createElement('li');\n//                 if(data[i].mode == 40) {\n//                     li.textContent = `${h_num}등 ${data[i].name} ${data[i].point}점`\n//                     document.querySelector('.HARD').appendChild(li);\n//                     h_num++;\n//                 } else {\n//                     li.textContent = `${n_num}등 ${data[i].name} ${data[i].point}점`\n//                     document.querySelector('.NOMAL').appendChild(li);\n//                     n_num++;\n//                 }\n//             }\n//         }\n//     })\n// })\n// document.querySelector('.NOMAL').innerHTML='';\n// document.querySelector('.HARD').innerHTML='';\n// axios.get('http://211.202.195.102:4000/ranking')\n//     .then(res => {\n//         const {data} = res;\n//         console.log(data);\n//         let n_num = 1;\n//         let h_num = 1;\n//         if(data.length != 0){\n//             for(let i = 0; i < data.length; i++){\n//                 const li = document.createElement('li');\n//                 if(data[i].mode == 40) {\n//                     li.textContent = `${h_num}등 ${data[i].name} ${data[i].point}점`\n//                     document.querySelector('.HARD').appendChild(li);\n//                     h_num++;\n//                 } else {\n//                     li.textContent = `${n_num}등 ${data[i].name} ${data[i].point}점`\n//                     document.querySelector('.NOMAL').appendChild(li);\n//                     n_num++;\n//                 }\n//             }\n//         }\n//     })\n"],"names":["ClassList","Documents","table","document","querySelector","position","getElementsByTagName","ConditionValue","KeyCode","Game","point","isModal","speed","normal","isProceeding","canPlay","Snake","_this","startX","startY","stateRight","stateLeft","stateUp","stateDown","bodys","pointYX","nowProgressed","undefined","onX","onY","getLastY","length","getLastX","BoardService","initTable","element","i","col","tr","createElement","append","j","row","td","makePoint","numX","Math","floor","random","numY","snakes","GameService","setGameState","state","setGameProceeding","SnakeService","addSnake","y","x","unshift","removeSnake","pop","initSnake","checkOver","children","classList","contains","canMove","inputCode","clearInterval","ArrowRight","ArrowLeft","ArrowUp","ArrowDown","onHit","_Snake$pointYX","_slicedToArray","pointY","pointX","Controller","addClassSnake","add","snake","addClassPoint","removeClassSnake","remove","removeClassPoint","gameStart","gameInit","move","keyCode","controller","addEventListener","e","code"],"sourceRoot":""}